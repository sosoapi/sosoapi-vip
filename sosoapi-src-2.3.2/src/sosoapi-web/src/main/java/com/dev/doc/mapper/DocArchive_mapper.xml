<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.doc.dao.DocArchiveDao">
	<insert id="add" parameterType="docArchive" useGeneratedKeys="true" keyProperty="id">
		insert into t_doc_archive
			(
				id,
				create_date,
				modify_date,
				proj_id,
				doc_id,
				title,
				description,
				label,
				user_id,
				share,
				share_password,
				share_url,
				type,
				archive_url
			)
		values
			(
				#{id},
				#{createDate},
				#{modifyDate},
				#{projId},
				#{docId},
				#{title},
				#{description},
				#{label},
				#{userId},
				#{share},
				#{sharePassword},
				#{shareUrl},
				#{type},
				#{archiveUrl}
			)	
	</insert>
	
	<update id="update" parameterType="docArchive">
		update t_doc_archive
		<set>
			<if test="modifyDate != null and '' != modifyDate"> modify_date = #{modifyDate},</if>
			<if test="title != null and '' != title"> title = #{title},</if>
			<if test="description != null"> description = #{description},</if>
			<if test="label != null"> label = #{label},</if>
			<if test="share != null"> share = #{share},</if>
			<if test="sharePassword != null"> share_password = #{sharePassword},</if>
			<if test="shareUrl != null"> share_url = #{shareUrl},</if>
			<if test="type != null and '' != type"> type = #{type},</if>
			<if test="archiveUrl != null"> archive_url = #{archiveUrl},</if>
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="long">
		delete from
			t_doc_archive
		where
			id = #{id}
	</delete>
	
	<select id="getById" resultType="docArchive">
		select
			*
		from
			t_doc_archive
		where
			id = #{id}
	</select>
	
	<select id="getByDocId" resultType="docArchive">
		select
			*
		from
			t_doc_archive
		where
			id = #{archiveId}
		and
			doc_id = #{docId}
	</select>
	
	<update id="updateByDocId">
		update t_doc_archive
		<set>
			<if test="modifyDate != null and '' != modifyDate"> modify_date = #{modifyDate},</if>
			<if test="title != null and '' != title"> title = #{title},</if>
			<if test="description != null"> description = #{description},</if>
			<if test="label != null"> label = #{label},</if>
			<if test="share != null"> share = #{share},</if>
			<if test="sharePassword != null"> share_password = #{sharePassword},</if>
			<if test="type != null and '' != type"> type = #{type},</if>
			<if test="archiveUrl != null"> archive_url = #{archiveUrl},</if>
		</set>
		where
			id = #{id}
		and
			doc_id = #{docId}
	</update>
	
	<delete id="delByDocId">
		delete from
			t_doc_archive
		where
			id = #{archiveId}
		and
			doc_id = #{docId}
	</delete>
	
	<sql id="sqlForListByDocId">
		from
			t_doc_archive
		<where>
			<if test="true">
			and
				doc_id = #{docId}
			</if>
			
			<if test="title != null">
			and
				title like #{title}
			</if>
			
			<if test="description != null">
			and
				description like #{description}
			</if>
			
			<if test="label != null">
			and
				label like #{label}
			</if>
		</where>
	</sql>
	
	<select id="listByDocId" resultType="docArchive">
		select
			id,
			title,
			create_date,
			share,
		    proj_id,
			doc_id,
			label
		<include refid="sqlForListByDocId"></include>
		order by
			create_date desc
		limit
			#{pager.start},#{pager.pageSize}
	</select>
	
	<select id="countByDocId" resultType="int">
		select
			count(id)
		<include refid="sqlForListByDocId"></include>
	</select>
</mapper>